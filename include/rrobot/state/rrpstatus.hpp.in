#ifndef RRPSTATUS_HPP
#define RRPSTATUS_HPP

#include <stdint.h>

/**
 * indicates the current status of a handler.
 * (value range is 1,2,4,8,16,32,64,128
 */

namespace rrobot {
    enum RRP_STATUS : uint32_t {
        INITILIZING    = 1 << 0,  // indicates that the handler has been started but is not yet active
        ACTIVE         = 1 << 1,  // indicates that the handler is an active state, and ready to consume or produce.
        ERROR          = 1 << 2,  // indicates that an error has occured, and the handler will need to be reloaded.
        RELOADING      = 1 << 3,  // reloading after an error has occured.
        SHUTTING_DOWN  = 1 << 4, // indicates that system is now shutting down.
        TERMINATED     = 1 << 5, // handler has terminated.
    };
}

// defines status array
#define STATUS_ARRAY_INIT {RRP_STATUS::TERMINATED, RRP_STATUS::SHUTTING_DOWN, RRP_STATUS::ERROR, RRP_STATUS::RELOADING, \
    RRP_STATUS::INITILIZING, RRP_STATUS::ACTIVE}


// bitmap.
#define STATUS_BITMASK(F) (F & RRP_STATUS::INITILIZING) + (F & RRP_STATUS::ACTIVE) + (F & RRP_STATUS::ERROR) + \
    (F &  RRP_STATUS::RELOADING) + (F &  RRP_STATUS::SHUTTING_DOWN) + (F &  RRP_STATUS::TERMINATED)

 #define VALID_RRP_STATUS_KEYS_INIT  unordered_map<RRP_STATUS, string> VALID_RRP_STATUS_KEYS = {\
    {{INITILIZING, "INITILIZING"}, {ACTIVE, "ACTIVE"}, {ERROR, "ERROR"}, {RELOADING, "RELOADING"}, {SHUTTING_DOWN, "SHUTTING_DOWN"}, {TERMINATED, "TERMINATED"}}\
}

#endif // RRPSTATUS_HPP