#ifndef RMULTIWII_CURATOR_HPP
#define RMULTIWII_CURATOR_HPP

#include <boost/algorithm/string.hpp>
#include <rrobot/events/event.hpp>
#include <rrobot/protocols/curators/multiwii/rmultiwii.hpp>

namespace rrobot {

class AbstractRmultiiCurator {
   public:
    virtual Event* deserialize(std::string in);
    virtual std::string serialize(Event* in);

   private:
    virtual std::string serializePayload(Event* in) = 0;
    virtual Event* deserializePayload(RmMultiWii& in) = 0;

   protected:
    std::vector<std::string> decodeTokens(std::string payload);
    std::string encodeTokens(std::vector<std::string> tokens);

   private:
    Crc32 _crc;
};
}  // namespace rrobot

#endif  // RMULTIWII_CURATOR_HPP